// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/config.proto

package com.google.crypto.tink.proto;

@java.lang.Deprecated public interface KeyTypeEntryOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.crypto.tink.KeyTypeEntry)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * E.g. “Aead”, “Mac”, ... (case-insensitive)
   * </pre>
   *
   * <code>string primitive_name = 1;</code>
   * @return The primitiveName.
   */
  java.lang.String getPrimitiveName();
  /**
   * <pre>
   * E.g. “Aead”, “Mac”, ... (case-insensitive)
   * </pre>
   *
   * <code>string primitive_name = 1;</code>
   * @return The bytes for primitiveName.
   */
  com.google.protobuf.ByteString
      getPrimitiveNameBytes();

  /**
   * <pre>
   * Name of the key type.
   * </pre>
   *
   * <code>string type_url = 2;</code>
   * @return The typeUrl.
   */
  java.lang.String getTypeUrl();
  /**
   * <pre>
   * Name of the key type.
   * </pre>
   *
   * <code>string type_url = 2;</code>
   * @return The bytes for typeUrl.
   */
  com.google.protobuf.ByteString
      getTypeUrlBytes();

  /**
   * <pre>
   * Minimum required version of key manager.
   * </pre>
   *
   * <code>uint32 key_manager_version = 3;</code>
   * @return The keyManagerVersion.
   */
  int getKeyManagerVersion();

  /**
   * <pre>
   * Can the key manager create new keys?
   * </pre>
   *
   * <code>bool new_key_allowed = 4;</code>
   * @return The newKeyAllowed.
   */
  boolean getNewKeyAllowed();

  /**
   * <pre>
   * Catalogue to be queried for key manager,
   * </pre>
   *
   * <code>string catalogue_name = 5;</code>
   * @return The catalogueName.
   */
  java.lang.String getCatalogueName();
  /**
   * <pre>
   * Catalogue to be queried for key manager,
   * </pre>
   *
   * <code>string catalogue_name = 5;</code>
   * @return The bytes for catalogueName.
   */
  com.google.protobuf.ByteString
      getCatalogueNameBytes();
}
