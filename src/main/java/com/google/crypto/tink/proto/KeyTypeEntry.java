// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/config.proto

package com.google.crypto.tink.proto;

/**
 * <pre>
 * An entry that describes a key type to be used with Tink library,
 * specifying the corresponding primitive, key manager, and deprecation status.
 * All fields are required.
 * </pre>
 *
 * Protobuf type {@code google.crypto.tink.KeyTypeEntry}
 */
@java.lang.Deprecated public final class KeyTypeEntry extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.crypto.tink.KeyTypeEntry)
    KeyTypeEntryOrBuilder {
private static final long serialVersionUID = 0L;
  // Use KeyTypeEntry.newBuilder() to construct.
  private KeyTypeEntry(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private KeyTypeEntry() {
    primitiveName_ = "";
    typeUrl_ = "";
    catalogueName_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new KeyTypeEntry();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.crypto.tink.proto.Config.internal_static_google_crypto_tink_KeyTypeEntry_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.crypto.tink.proto.Config.internal_static_google_crypto_tink_KeyTypeEntry_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.crypto.tink.proto.KeyTypeEntry.class, com.google.crypto.tink.proto.KeyTypeEntry.Builder.class);
  }

  public static final int PRIMITIVE_NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object primitiveName_;
  /**
   * <pre>
   * E.g. “Aead”, “Mac”, ... (case-insensitive)
   * </pre>
   *
   * <code>string primitive_name = 1;</code>
   * @return The primitiveName.
   */
  @java.lang.Override
  public java.lang.String getPrimitiveName() {
    java.lang.Object ref = primitiveName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      primitiveName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * E.g. “Aead”, “Mac”, ... (case-insensitive)
   * </pre>
   *
   * <code>string primitive_name = 1;</code>
   * @return The bytes for primitiveName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPrimitiveNameBytes() {
    java.lang.Object ref = primitiveName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      primitiveName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TYPE_URL_FIELD_NUMBER = 2;
  private volatile java.lang.Object typeUrl_;
  /**
   * <pre>
   * Name of the key type.
   * </pre>
   *
   * <code>string type_url = 2;</code>
   * @return The typeUrl.
   */
  @java.lang.Override
  public java.lang.String getTypeUrl() {
    java.lang.Object ref = typeUrl_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      typeUrl_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Name of the key type.
   * </pre>
   *
   * <code>string type_url = 2;</code>
   * @return The bytes for typeUrl.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTypeUrlBytes() {
    java.lang.Object ref = typeUrl_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      typeUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEY_MANAGER_VERSION_FIELD_NUMBER = 3;
  private int keyManagerVersion_;
  /**
   * <pre>
   * Minimum required version of key manager.
   * </pre>
   *
   * <code>uint32 key_manager_version = 3;</code>
   * @return The keyManagerVersion.
   */
  @java.lang.Override
  public int getKeyManagerVersion() {
    return keyManagerVersion_;
  }

  public static final int NEW_KEY_ALLOWED_FIELD_NUMBER = 4;
  private boolean newKeyAllowed_;
  /**
   * <pre>
   * Can the key manager create new keys?
   * </pre>
   *
   * <code>bool new_key_allowed = 4;</code>
   * @return The newKeyAllowed.
   */
  @java.lang.Override
  public boolean getNewKeyAllowed() {
    return newKeyAllowed_;
  }

  public static final int CATALOGUE_NAME_FIELD_NUMBER = 5;
  private volatile java.lang.Object catalogueName_;
  /**
   * <pre>
   * Catalogue to be queried for key manager,
   * </pre>
   *
   * <code>string catalogue_name = 5;</code>
   * @return The catalogueName.
   */
  @java.lang.Override
  public java.lang.String getCatalogueName() {
    java.lang.Object ref = catalogueName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      catalogueName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Catalogue to be queried for key manager,
   * </pre>
   *
   * <code>string catalogue_name = 5;</code>
   * @return The bytes for catalogueName.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getCatalogueNameBytes() {
    java.lang.Object ref = catalogueName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      catalogueName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(primitiveName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, primitiveName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeUrl_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, typeUrl_);
    }
    if (keyManagerVersion_ != 0) {
      output.writeUInt32(3, keyManagerVersion_);
    }
    if (newKeyAllowed_ != false) {
      output.writeBool(4, newKeyAllowed_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalogueName_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, catalogueName_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(primitiveName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, primitiveName_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(typeUrl_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, typeUrl_);
    }
    if (keyManagerVersion_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, keyManagerVersion_);
    }
    if (newKeyAllowed_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, newKeyAllowed_);
    }
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(catalogueName_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, catalogueName_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.crypto.tink.proto.KeyTypeEntry)) {
      return super.equals(obj);
    }
    com.google.crypto.tink.proto.KeyTypeEntry other = (com.google.crypto.tink.proto.KeyTypeEntry) obj;

    if (!getPrimitiveName()
        .equals(other.getPrimitiveName())) return false;
    if (!getTypeUrl()
        .equals(other.getTypeUrl())) return false;
    if (getKeyManagerVersion()
        != other.getKeyManagerVersion()) return false;
    if (getNewKeyAllowed()
        != other.getNewKeyAllowed()) return false;
    if (!getCatalogueName()
        .equals(other.getCatalogueName())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PRIMITIVE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getPrimitiveName().hashCode();
    hash = (37 * hash) + TYPE_URL_FIELD_NUMBER;
    hash = (53 * hash) + getTypeUrl().hashCode();
    hash = (37 * hash) + KEY_MANAGER_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getKeyManagerVersion();
    hash = (37 * hash) + NEW_KEY_ALLOWED_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNewKeyAllowed());
    hash = (37 * hash) + CATALOGUE_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getCatalogueName().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.KeyTypeEntry parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.crypto.tink.proto.KeyTypeEntry prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * An entry that describes a key type to be used with Tink library,
   * specifying the corresponding primitive, key manager, and deprecation status.
   * All fields are required.
   * </pre>
   *
   * Protobuf type {@code google.crypto.tink.KeyTypeEntry}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.crypto.tink.KeyTypeEntry)
      com.google.crypto.tink.proto.KeyTypeEntryOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.crypto.tink.proto.Config.internal_static_google_crypto_tink_KeyTypeEntry_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.crypto.tink.proto.Config.internal_static_google_crypto_tink_KeyTypeEntry_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.crypto.tink.proto.KeyTypeEntry.class, com.google.crypto.tink.proto.KeyTypeEntry.Builder.class);
    }

    // Construct using com.google.crypto.tink.proto.KeyTypeEntry.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      primitiveName_ = "";

      typeUrl_ = "";

      keyManagerVersion_ = 0;

      newKeyAllowed_ = false;

      catalogueName_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.crypto.tink.proto.Config.internal_static_google_crypto_tink_KeyTypeEntry_descriptor;
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.KeyTypeEntry getDefaultInstanceForType() {
      return com.google.crypto.tink.proto.KeyTypeEntry.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.KeyTypeEntry build() {
      com.google.crypto.tink.proto.KeyTypeEntry result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.KeyTypeEntry buildPartial() {
      com.google.crypto.tink.proto.KeyTypeEntry result = new com.google.crypto.tink.proto.KeyTypeEntry(this);
      result.primitiveName_ = primitiveName_;
      result.typeUrl_ = typeUrl_;
      result.keyManagerVersion_ = keyManagerVersion_;
      result.newKeyAllowed_ = newKeyAllowed_;
      result.catalogueName_ = catalogueName_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.crypto.tink.proto.KeyTypeEntry) {
        return mergeFrom((com.google.crypto.tink.proto.KeyTypeEntry)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.crypto.tink.proto.KeyTypeEntry other) {
      if (other == com.google.crypto.tink.proto.KeyTypeEntry.getDefaultInstance()) return this;
      if (!other.getPrimitiveName().isEmpty()) {
        primitiveName_ = other.primitiveName_;
        onChanged();
      }
      if (!other.getTypeUrl().isEmpty()) {
        typeUrl_ = other.typeUrl_;
        onChanged();
      }
      if (other.getKeyManagerVersion() != 0) {
        setKeyManagerVersion(other.getKeyManagerVersion());
      }
      if (other.getNewKeyAllowed() != false) {
        setNewKeyAllowed(other.getNewKeyAllowed());
      }
      if (!other.getCatalogueName().isEmpty()) {
        catalogueName_ = other.catalogueName_;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              primitiveName_ = input.readStringRequireUtf8();

              break;
            } // case 10
            case 18: {
              typeUrl_ = input.readStringRequireUtf8();

              break;
            } // case 18
            case 24: {
              keyManagerVersion_ = input.readUInt32();

              break;
            } // case 24
            case 32: {
              newKeyAllowed_ = input.readBool();

              break;
            } // case 32
            case 42: {
              catalogueName_ = input.readStringRequireUtf8();

              break;
            } // case 42
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private java.lang.Object primitiveName_ = "";
    /**
     * <pre>
     * E.g. “Aead”, “Mac”, ... (case-insensitive)
     * </pre>
     *
     * <code>string primitive_name = 1;</code>
     * @return The primitiveName.
     */
    public java.lang.String getPrimitiveName() {
      java.lang.Object ref = primitiveName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        primitiveName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * E.g. “Aead”, “Mac”, ... (case-insensitive)
     * </pre>
     *
     * <code>string primitive_name = 1;</code>
     * @return The bytes for primitiveName.
     */
    public com.google.protobuf.ByteString
        getPrimitiveNameBytes() {
      java.lang.Object ref = primitiveName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        primitiveName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * E.g. “Aead”, “Mac”, ... (case-insensitive)
     * </pre>
     *
     * <code>string primitive_name = 1;</code>
     * @param value The primitiveName to set.
     * @return This builder for chaining.
     */
    public Builder setPrimitiveName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      primitiveName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * E.g. “Aead”, “Mac”, ... (case-insensitive)
     * </pre>
     *
     * <code>string primitive_name = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrimitiveName() {
      
      primitiveName_ = getDefaultInstance().getPrimitiveName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * E.g. “Aead”, “Mac”, ... (case-insensitive)
     * </pre>
     *
     * <code>string primitive_name = 1;</code>
     * @param value The bytes for primitiveName to set.
     * @return This builder for chaining.
     */
    public Builder setPrimitiveNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      primitiveName_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object typeUrl_ = "";
    /**
     * <pre>
     * Name of the key type.
     * </pre>
     *
     * <code>string type_url = 2;</code>
     * @return The typeUrl.
     */
    public java.lang.String getTypeUrl() {
      java.lang.Object ref = typeUrl_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeUrl_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Name of the key type.
     * </pre>
     *
     * <code>string type_url = 2;</code>
     * @return The bytes for typeUrl.
     */
    public com.google.protobuf.ByteString
        getTypeUrlBytes() {
      java.lang.Object ref = typeUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Name of the key type.
     * </pre>
     *
     * <code>string type_url = 2;</code>
     * @param value The typeUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTypeUrl(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      typeUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the key type.
     * </pre>
     *
     * <code>string type_url = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearTypeUrl() {
      
      typeUrl_ = getDefaultInstance().getTypeUrl();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Name of the key type.
     * </pre>
     *
     * <code>string type_url = 2;</code>
     * @param value The bytes for typeUrl to set.
     * @return This builder for chaining.
     */
    public Builder setTypeUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      typeUrl_ = value;
      onChanged();
      return this;
    }

    private int keyManagerVersion_ ;
    /**
     * <pre>
     * Minimum required version of key manager.
     * </pre>
     *
     * <code>uint32 key_manager_version = 3;</code>
     * @return The keyManagerVersion.
     */
    @java.lang.Override
    public int getKeyManagerVersion() {
      return keyManagerVersion_;
    }
    /**
     * <pre>
     * Minimum required version of key manager.
     * </pre>
     *
     * <code>uint32 key_manager_version = 3;</code>
     * @param value The keyManagerVersion to set.
     * @return This builder for chaining.
     */
    public Builder setKeyManagerVersion(int value) {
      
      keyManagerVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Minimum required version of key manager.
     * </pre>
     *
     * <code>uint32 key_manager_version = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyManagerVersion() {
      
      keyManagerVersion_ = 0;
      onChanged();
      return this;
    }

    private boolean newKeyAllowed_ ;
    /**
     * <pre>
     * Can the key manager create new keys?
     * </pre>
     *
     * <code>bool new_key_allowed = 4;</code>
     * @return The newKeyAllowed.
     */
    @java.lang.Override
    public boolean getNewKeyAllowed() {
      return newKeyAllowed_;
    }
    /**
     * <pre>
     * Can the key manager create new keys?
     * </pre>
     *
     * <code>bool new_key_allowed = 4;</code>
     * @param value The newKeyAllowed to set.
     * @return This builder for chaining.
     */
    public Builder setNewKeyAllowed(boolean value) {
      
      newKeyAllowed_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Can the key manager create new keys?
     * </pre>
     *
     * <code>bool new_key_allowed = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearNewKeyAllowed() {
      
      newKeyAllowed_ = false;
      onChanged();
      return this;
    }

    private java.lang.Object catalogueName_ = "";
    /**
     * <pre>
     * Catalogue to be queried for key manager,
     * </pre>
     *
     * <code>string catalogue_name = 5;</code>
     * @return The catalogueName.
     */
    public java.lang.String getCatalogueName() {
      java.lang.Object ref = catalogueName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        catalogueName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Catalogue to be queried for key manager,
     * </pre>
     *
     * <code>string catalogue_name = 5;</code>
     * @return The bytes for catalogueName.
     */
    public com.google.protobuf.ByteString
        getCatalogueNameBytes() {
      java.lang.Object ref = catalogueName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        catalogueName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Catalogue to be queried for key manager,
     * </pre>
     *
     * <code>string catalogue_name = 5;</code>
     * @param value The catalogueName to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogueName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      catalogueName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Catalogue to be queried for key manager,
     * </pre>
     *
     * <code>string catalogue_name = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearCatalogueName() {
      
      catalogueName_ = getDefaultInstance().getCatalogueName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Catalogue to be queried for key manager,
     * </pre>
     *
     * <code>string catalogue_name = 5;</code>
     * @param value The bytes for catalogueName to set.
     * @return This builder for chaining.
     */
    public Builder setCatalogueNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      catalogueName_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.crypto.tink.KeyTypeEntry)
  }

  // @@protoc_insertion_point(class_scope:google.crypto.tink.KeyTypeEntry)
  private static final com.google.crypto.tink.proto.KeyTypeEntry DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.crypto.tink.proto.KeyTypeEntry();
  }

  public static com.google.crypto.tink.proto.KeyTypeEntry getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<KeyTypeEntry>
      PARSER = new com.google.protobuf.AbstractParser<KeyTypeEntry>() {
    @java.lang.Override
    public KeyTypeEntry parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<KeyTypeEntry> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<KeyTypeEntry> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.crypto.tink.proto.KeyTypeEntry getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

