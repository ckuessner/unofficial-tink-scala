// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ed25519.proto

package com.google.crypto.tink.proto;

/**
 * <pre>
 * key_type: type.googleapis.com/google.crypto.tink.Ed25519PrivateKey
 * </pre>
 *
 * Protobuf type {@code google.crypto.tink.Ed25519PrivateKey}
 */
public final class Ed25519PrivateKey extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:google.crypto.tink.Ed25519PrivateKey)
    Ed25519PrivateKeyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Ed25519PrivateKey.newBuilder() to construct.
  private Ed25519PrivateKey(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Ed25519PrivateKey() {
    keyValue_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Ed25519PrivateKey();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.crypto.tink.proto.Ed25519.internal_static_google_crypto_tink_Ed25519PrivateKey_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.crypto.tink.proto.Ed25519.internal_static_google_crypto_tink_Ed25519PrivateKey_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.crypto.tink.proto.Ed25519PrivateKey.class, com.google.crypto.tink.proto.Ed25519PrivateKey.Builder.class);
  }

  public static final int VERSION_FIELD_NUMBER = 1;
  private int version_;
  /**
   * <pre>
   * Required.
   * </pre>
   *
   * <code>uint32 version = 1;</code>
   * @return The version.
   */
  @java.lang.Override
  public int getVersion() {
    return version_;
  }

  public static final int KEY_VALUE_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString keyValue_;
  /**
   * <pre>
   * The private key is 32 bytes of cryptographically secure random data.
   * See https://tools.ietf.org/html/rfc8032#section-5.1.5.
   * Required.
   * </pre>
   *
   * <code>bytes key_value = 2;</code>
   * @return The keyValue.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getKeyValue() {
    return keyValue_;
  }

  public static final int PUBLIC_KEY_FIELD_NUMBER = 3;
  private com.google.crypto.tink.proto.Ed25519PublicKey publicKey_;
  /**
   * <pre>
   * The corresponding public key.
   * </pre>
   *
   * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
   * @return Whether the publicKey field is set.
   */
  @java.lang.Override
  public boolean hasPublicKey() {
    return publicKey_ != null;
  }
  /**
   * <pre>
   * The corresponding public key.
   * </pre>
   *
   * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
   * @return The publicKey.
   */
  @java.lang.Override
  public com.google.crypto.tink.proto.Ed25519PublicKey getPublicKey() {
    return publicKey_ == null ? com.google.crypto.tink.proto.Ed25519PublicKey.getDefaultInstance() : publicKey_;
  }
  /**
   * <pre>
   * The corresponding public key.
   * </pre>
   *
   * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
   */
  @java.lang.Override
  public com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder getPublicKeyOrBuilder() {
    return getPublicKey();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (version_ != 0) {
      output.writeUInt32(1, version_);
    }
    if (!keyValue_.isEmpty()) {
      output.writeBytes(2, keyValue_);
    }
    if (publicKey_ != null) {
      output.writeMessage(3, getPublicKey());
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (version_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(1, version_);
    }
    if (!keyValue_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, keyValue_);
    }
    if (publicKey_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getPublicKey());
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.crypto.tink.proto.Ed25519PrivateKey)) {
      return super.equals(obj);
    }
    com.google.crypto.tink.proto.Ed25519PrivateKey other = (com.google.crypto.tink.proto.Ed25519PrivateKey) obj;

    if (getVersion()
        != other.getVersion()) return false;
    if (!getKeyValue()
        .equals(other.getKeyValue())) return false;
    if (hasPublicKey() != other.hasPublicKey()) return false;
    if (hasPublicKey()) {
      if (!getPublicKey()
          .equals(other.getPublicKey())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getVersion();
    hash = (37 * hash) + KEY_VALUE_FIELD_NUMBER;
    hash = (53 * hash) + getKeyValue().hashCode();
    if (hasPublicKey()) {
      hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getPublicKey().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.crypto.tink.proto.Ed25519PrivateKey parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.crypto.tink.proto.Ed25519PrivateKey prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * key_type: type.googleapis.com/google.crypto.tink.Ed25519PrivateKey
   * </pre>
   *
   * Protobuf type {@code google.crypto.tink.Ed25519PrivateKey}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.crypto.tink.Ed25519PrivateKey)
      com.google.crypto.tink.proto.Ed25519PrivateKeyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.crypto.tink.proto.Ed25519.internal_static_google_crypto_tink_Ed25519PrivateKey_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.crypto.tink.proto.Ed25519.internal_static_google_crypto_tink_Ed25519PrivateKey_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.crypto.tink.proto.Ed25519PrivateKey.class, com.google.crypto.tink.proto.Ed25519PrivateKey.Builder.class);
    }

    // Construct using com.google.crypto.tink.proto.Ed25519PrivateKey.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      version_ = 0;

      keyValue_ = com.google.protobuf.ByteString.EMPTY;

      if (publicKeyBuilder_ == null) {
        publicKey_ = null;
      } else {
        publicKey_ = null;
        publicKeyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.crypto.tink.proto.Ed25519.internal_static_google_crypto_tink_Ed25519PrivateKey_descriptor;
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.Ed25519PrivateKey getDefaultInstanceForType() {
      return com.google.crypto.tink.proto.Ed25519PrivateKey.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.Ed25519PrivateKey build() {
      com.google.crypto.tink.proto.Ed25519PrivateKey result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.crypto.tink.proto.Ed25519PrivateKey buildPartial() {
      com.google.crypto.tink.proto.Ed25519PrivateKey result = new com.google.crypto.tink.proto.Ed25519PrivateKey(this);
      result.version_ = version_;
      result.keyValue_ = keyValue_;
      if (publicKeyBuilder_ == null) {
        result.publicKey_ = publicKey_;
      } else {
        result.publicKey_ = publicKeyBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.crypto.tink.proto.Ed25519PrivateKey) {
        return mergeFrom((com.google.crypto.tink.proto.Ed25519PrivateKey)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.crypto.tink.proto.Ed25519PrivateKey other) {
      if (other == com.google.crypto.tink.proto.Ed25519PrivateKey.getDefaultInstance()) return this;
      if (other.getVersion() != 0) {
        setVersion(other.getVersion());
      }
      if (other.getKeyValue() != com.google.protobuf.ByteString.EMPTY) {
        setKeyValue(other.getKeyValue());
      }
      if (other.hasPublicKey()) {
        mergePublicKey(other.getPublicKey());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              version_ = input.readUInt32();

              break;
            } // case 8
            case 18: {
              keyValue_ = input.readBytes();

              break;
            } // case 18
            case 26: {
              input.readMessage(
                  getPublicKeyFieldBuilder().getBuilder(),
                  extensionRegistry);

              break;
            } // case 26
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }

    private int version_ ;
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @param value The version to set.
     * @return This builder for chaining.
     */
    public Builder setVersion(int value) {
      
      version_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required.
     * </pre>
     *
     * <code>uint32 version = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearVersion() {
      
      version_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString keyValue_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * The private key is 32 bytes of cryptographically secure random data.
     * See https://tools.ietf.org/html/rfc8032#section-5.1.5.
     * Required.
     * </pre>
     *
     * <code>bytes key_value = 2;</code>
     * @return The keyValue.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getKeyValue() {
      return keyValue_;
    }
    /**
     * <pre>
     * The private key is 32 bytes of cryptographically secure random data.
     * See https://tools.ietf.org/html/rfc8032#section-5.1.5.
     * Required.
     * </pre>
     *
     * <code>bytes key_value = 2;</code>
     * @param value The keyValue to set.
     * @return This builder for chaining.
     */
    public Builder setKeyValue(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyValue_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The private key is 32 bytes of cryptographically secure random data.
     * See https://tools.ietf.org/html/rfc8032#section-5.1.5.
     * Required.
     * </pre>
     *
     * <code>bytes key_value = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearKeyValue() {
      
      keyValue_ = getDefaultInstance().getKeyValue();
      onChanged();
      return this;
    }

    private com.google.crypto.tink.proto.Ed25519PublicKey publicKey_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.crypto.tink.proto.Ed25519PublicKey, com.google.crypto.tink.proto.Ed25519PublicKey.Builder, com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder> publicKeyBuilder_;
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     * @return Whether the publicKey field is set.
     */
    public boolean hasPublicKey() {
      return publicKeyBuilder_ != null || publicKey_ != null;
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     * @return The publicKey.
     */
    public com.google.crypto.tink.proto.Ed25519PublicKey getPublicKey() {
      if (publicKeyBuilder_ == null) {
        return publicKey_ == null ? com.google.crypto.tink.proto.Ed25519PublicKey.getDefaultInstance() : publicKey_;
      } else {
        return publicKeyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public Builder setPublicKey(com.google.crypto.tink.proto.Ed25519PublicKey value) {
      if (publicKeyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        publicKey_ = value;
        onChanged();
      } else {
        publicKeyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public Builder setPublicKey(
        com.google.crypto.tink.proto.Ed25519PublicKey.Builder builderForValue) {
      if (publicKeyBuilder_ == null) {
        publicKey_ = builderForValue.build();
        onChanged();
      } else {
        publicKeyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public Builder mergePublicKey(com.google.crypto.tink.proto.Ed25519PublicKey value) {
      if (publicKeyBuilder_ == null) {
        if (publicKey_ != null) {
          publicKey_ =
            com.google.crypto.tink.proto.Ed25519PublicKey.newBuilder(publicKey_).mergeFrom(value).buildPartial();
        } else {
          publicKey_ = value;
        }
        onChanged();
      } else {
        publicKeyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public Builder clearPublicKey() {
      if (publicKeyBuilder_ == null) {
        publicKey_ = null;
        onChanged();
      } else {
        publicKey_ = null;
        publicKeyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public com.google.crypto.tink.proto.Ed25519PublicKey.Builder getPublicKeyBuilder() {
      
      onChanged();
      return getPublicKeyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    public com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder getPublicKeyOrBuilder() {
      if (publicKeyBuilder_ != null) {
        return publicKeyBuilder_.getMessageOrBuilder();
      } else {
        return publicKey_ == null ?
            com.google.crypto.tink.proto.Ed25519PublicKey.getDefaultInstance() : publicKey_;
      }
    }
    /**
     * <pre>
     * The corresponding public key.
     * </pre>
     *
     * <code>.google.crypto.tink.Ed25519PublicKey public_key = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.crypto.tink.proto.Ed25519PublicKey, com.google.crypto.tink.proto.Ed25519PublicKey.Builder, com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder> 
        getPublicKeyFieldBuilder() {
      if (publicKeyBuilder_ == null) {
        publicKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.crypto.tink.proto.Ed25519PublicKey, com.google.crypto.tink.proto.Ed25519PublicKey.Builder, com.google.crypto.tink.proto.Ed25519PublicKeyOrBuilder>(
                getPublicKey(),
                getParentForChildren(),
                isClean());
        publicKey_ = null;
      }
      return publicKeyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:google.crypto.tink.Ed25519PrivateKey)
  }

  // @@protoc_insertion_point(class_scope:google.crypto.tink.Ed25519PrivateKey)
  private static final com.google.crypto.tink.proto.Ed25519PrivateKey DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.crypto.tink.proto.Ed25519PrivateKey();
  }

  public static com.google.crypto.tink.proto.Ed25519PrivateKey getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Ed25519PrivateKey>
      PARSER = new com.google.protobuf.AbstractParser<Ed25519PrivateKey>() {
    @java.lang.Override
    public Ed25519PrivateKey parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Ed25519PrivateKey> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Ed25519PrivateKey> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.crypto.tink.proto.Ed25519PrivateKey getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

